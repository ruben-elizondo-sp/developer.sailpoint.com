"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([[78672],{58508:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const o={id:"date-math",title:"Date Math",pagination_label:"Date Math",sidebar_label:"Date Math",sidebar_class_name:"dateMath",keywords:["transforms","operations","date","math"],description:"Add, subtract, and round components of a timestamp's incoming value.",slug:"/docs/transforms/operations/date-math",tags:["Transforms","Transform Operations"]},i=void 0,s={unversionedId:"docs/identity-now/transforms/operations/date-math",id:"docs/identity-now/transforms/operations/date-math",title:"Date Math",description:"Add, subtract, and round components of a timestamp's incoming value.",source:"@site/products/idn/docs/identity-now/transforms/operations/date-math.md",sourceDirName:"docs/identity-now/transforms/operations",slug:"/docs/transforms/operations/date-math",permalink:"/idn/docs/transforms/operations/date-math",draft:!1,editUrl:"https://github.com/sailpoint-oss/developer-community-site/edit/main/products/idn/docs/identity-now/transforms/operations/date-math.md",tags:[{label:"Transforms",permalink:"/idn/tags/transforms"},{label:"Transform Operations",permalink:"/idn/tags/transform-operations"}],version:"current",lastUpdatedBy:"GitHub Action Bot",lastUpdatedAt:1666883192,formattedLastUpdatedAt:"Oct 27, 2022",frontMatter:{id:"date-math",title:"Date Math",pagination_label:"Date Math",sidebar_label:"Date Math",sidebar_class_name:"dateMath",keywords:["transforms","operations","date","math"],description:"Add, subtract, and round components of a timestamp's incoming value.",slug:"/docs/transforms/operations/date-math",tags:["Transforms","Transform Operations"]},sidebar:"idnDocs",previous:{title:"Date Format",permalink:"/idn/docs/transforms/operations/date-format"},next:{title:"Decompose Diacritial Marks",permalink:"/idn/docs/transforms/operations/decompose-diacritical-marks"}},l={},p=[{value:"Overview",id:"overview",level:2},{value:"Transform Structure",id:"transform-structure",level:2},{value:"Attributes",id:"attributes",level:2},{value:"Examples",id:"examples",level:2}],m={toc:p};function d(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,'Use the date math transform to add, subtract, and round components of a\ntimestamp\'s incoming value. It also allows you to work with a referential value\nof "now" to run operations against the current date and time instead of a fixed\nvalue.'),(0,r.kt)("p",null,"The output format for the DateMath transform is \"yyyy-MM-dd'T'HH:mm.\" When you\nuse this transform inside another transform (e.g.,\n",(0,r.kt)("a",{parentName:"p",href:"/idn/docs/transforms/operations/date-compare"},"dateCompare"),"), make sure to convert to\n",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO8601")," first."),(0,r.kt)("admonition",{title:"Other Considerations",type:"note"},(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The input datetime value must always be in\n",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO8601 format"),", in UTC time zone:")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"yyyy-MM-ddThh:mm:ss:nnnZ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"2020-10-28T12:00:00.000Z, as an example")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The dateFormat transform can help get data into this format.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The industry standard for rounding is actually date/time truncation. When\nrounding down, the fractional value is truncated from the incoming data. When\nrounding up, the fractional value is truncated and the next unit of time is\nadded. Refer to the Transform Structure section below for examples."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},'When you are rounding, the "week" unit of time is not supported as a metric,\nand attempting to round up or down a week will result in an error.'),(0,r.kt)("li",{parentName:"ul"},'If you are using the "now" keyword and an input date is also applied as the\nimplicitly or explicitly definted input parameter, the transform prefers\nusing "now" and ignores the data in the ',(0,r.kt)("inlineCode",{parentName:"li"},"input")," attribute."))))),(0,r.kt)("h2",{id:"transform-structure"},"Transform Structure"),(0,r.kt)("p",null,"The date math transform takes the input value and executes addition, subtraction\nand/or rounding operations to that value based on an ",(0,r.kt)("inlineCode",{parentName:"p"},"expression")," configuration\nvalue. As indicated earlier, the input datetime must be in\n",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO8601 format"),". The ",(0,r.kt)("inlineCode",{parentName:"p"},"expression")," value\nleverages the following abbreviations to indicate which date or time component\nto evaluate:"),(0,r.kt)("blockquote",null,(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},'"y" - year'),(0,r.kt)("li",{parentName:"ul"},'"M" - month'),(0,r.kt)("li",{parentName:"ul"},'"w" - week'),(0,r.kt)("li",{parentName:"ul"},'"d" - day'),(0,r.kt)("li",{parentName:"ul"},'"h" - hour'),(0,r.kt)("li",{parentName:"ul"},'"m" - minute'),(0,r.kt)("li",{parentName:"ul"},'"s" - second'),(0,r.kt)("li",{parentName:"ul"},'"now" - the current instant in time'))),(0,r.kt)("p",null,"Also, the operational logic is defined by usage of one of the following symbols:"),(0,r.kt)("blockquote",null,(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},'"+" - add; This must be followed by a valid time unit.'),(0,r.kt)("li",{parentName:"ul"},'"-" - subtract; This must be followed by a valid time unit.'),(0,r.kt)("li",{parentName:"ul"},'"/" - round; This must be followed by a valid time unit.'))),(0,r.kt)("p",null,"Some examples of expressions are:"),(0,r.kt)("blockquote",null,(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"expression": "now"')," returns the current date and time."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"expression": "now/h"')," returns the current date and time, rounded to the\nhour."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"expression": "now+1w"')," returns one week from the current date and time."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"expression": "now+1y+1M+2d-4h+1m-3s/s"')," returns the current date and time\nplus one year, one month, two days, minus four hours, plus one minute and\nminus three seconds, rounded to the second."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"expression": "+3M"')," returns the date and time that would be three months\nmore than the value provided as an input to the transform."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "attributes": {\n    "expression": "+3M/h",\n    "roundUp": true,\n    "input": {\n      "attributes": {\n        "sourceName": "HR Source",\n        "attributeName": "startDate"\n      },\n      "type": "accountAttribute"\n    }\n  },\n  "type": "dateMath",\n  "name": "Test Date Math Transform"\n}\n')),(0,r.kt)("h2",{id:"attributes"},"Attributes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Required Attributes")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"type")," - This must always be set to ",(0,r.kt)("inlineCode",{parentName:"li"},"dateMath.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"name")," - This is a required attribute for all transforms. It represents\nthe name of the transform as it will appear in the UI's dropdown menus."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"expression")," - A string value of the date and time components to operate\non, along with the math operations to execute. Multiple operations on\nmultiple components are supported."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Optional Attributes")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"requiresPeriodicRefresh")," - This ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," value indicates whether\nthe transform logic should be reevaluated every evening as part of the\nidentity refresh process.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"roundUp")," - This ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," value indicates whether the transform\nrounds up or down when the ",(0,r.kt)("inlineCode",{parentName:"p"},"expression"),' defines a rounding ("/") operation.\nIf this value is not provided, the transform defaults to ',(0,r.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"true")," indicates the transform rounds up (i.e., truncate the fractional\ndate/time component indicated and then add one unit of that component)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"false")," indicates the transform rounds down (i.e., truncate the fractional\ndate/time component indicated)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"input")," - This is an optional attribute that can explicitly define the\ninput data passed into the transform logic. If no input is provided, the\ntransform takes its input from the source and attribute combination\nconfigured with the UI.")))))),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("p",null,"This transform takes the current date, subtracts five days from it, and rounds\ndown to the lowest day."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Transform Request Body"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "attributes": {\n    "expression": "now-5d/d",\n    "roundUp": false\n  },\n  "type": "dateMath",\n  "name": "Date Math Transform"\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("p",null,"\xa0"),(0,r.kt)("p",null,"This transform takes the ",(0,r.kt)("inlineCode",{parentName:"p"},"startDate"),' attribute from a user\'s record in the "HR\nSource," converts it from its native format to an\n',(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO8601-formatted")," string, and then\nadds twelve hours to it. The final value is then rounded up to the next second."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Transform Request Body"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "attributes": {\n    "expression": "+12h/s",\n    "roundUp": true,\n    "input": {\n      "attributes": {\n        "input": {\n          "attributes": {\n            "sourceName": "HR Source",\n            "attributeName": "startDate"\n          },\n          "type": "accountAttribute"\n        },\n        "inputFormat": "MMM dd yyyy, HH:mm:ss.SSS",\n        "outputFormat": "ISO8601"\n      },\n      "type": "dateFormat"\n    }\n  },\n  "type": "dateMath",\n  "name": "Date Math Transform"\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("p",null,"\xa0"),(0,r.kt)("p",null,"This transform take the ",(0,r.kt)("inlineCode",{parentName:"p"},"HIREDATE")," from Workday and converts it to\n",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO8601")," to be used in the Date Math\ntransform. The Date Math transform then creates a new Date of ",(0,r.kt)("inlineCode",{parentName:"p"},"HIREDATE + 1"),".\nSince that is then outputted in the format \"yyyy-MM-dd'T'HH:mm,\" you can then\nuse it in a ",(0,r.kt)("a",{parentName:"p",href:"/idn/docs/transforms/operations/date-format"},"dateFormat")," transform\nto give a WIN32 formatted date."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Transform Request Body"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "type": "dateFormat",\n  "name": "WD - HireDate",\n  "attributes": {\n    "input": {\n      "attributes": {\n        "expression": "+1d",\n        "input": {\n          "attributes": {\n            "input": {\n              "attributes": {\n                "attributeName": "HIREDATE",\n                "sourceName": "Workday"\n              },\n              "type": "accountAttribute"\n            },\n            "inputFormat": "MM/dd/yyyy",\n            "outputFormat": "ISO8601"\n          },\n          "type": "dateFormat"\n        },\n        "roundUp": true\n      },\n      "type": "dateMath"\n    },\n    "inputFormat": "yyyy-MM-dd\'T\'HH:mm",\n    "outputFormat": "EPOCH_TIME_WIN32"\n  }\n}\n')))}d.isMDXComponent=!0}}]);