"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([[86277],{36990:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var a=n(87462),o=(n(67294),n(3905));const i={id:"account-update",title:"Account Update",pagination_label:"Account Update",sidebar_label:"Account Update",keywords:["connectivity","connectors","account update"],description:"Update an account on the source.",slug:"/docs/saas-connectivity/commands/account-update",tags:["Connectivity","Connector Command"]},c=void 0,r={unversionedId:"docs/identity-now/saas-connectivity/connector-commands/account-update",id:"docs/identity-now/saas-connectivity/connector-commands/account-update",title:"Account Update",description:"Update an account on the source.",source:"@site/products/idn/docs/identity-now/saas-connectivity/connector-commands/account-update.md",sourceDirName:"docs/identity-now/saas-connectivity/connector-commands",slug:"/docs/saas-connectivity/commands/account-update",permalink:"/idn/docs/saas-connectivity/commands/account-update",draft:!1,editUrl:"https://github.com/sailpoint-oss/developer-community-site/edit/main/products/idn/docs/identity-now/saas-connectivity/connector-commands/account-update.md",tags:[{label:"Connectivity",permalink:"/idn/tags/connectivity"},{label:"Connector Command",permalink:"/idn/tags/connector-command"}],version:"current",lastUpdatedBy:"GitHub Action Bot",lastUpdatedAt:1666883192,formattedLastUpdatedAt:"Oct 27, 2022",frontMatter:{id:"account-update",title:"Account Update",pagination_label:"Account Update",sidebar_label:"Account Update",keywords:["connectivity","connectors","account update"],description:"Update an account on the source.",slug:"/docs/saas-connectivity/commands/account-update",tags:["Connectivity","Connector Command"]},sidebar:"idnDocs",previous:{title:"Account Unlock",permalink:"/idn/docs/saas-connectivity/commands/account-unlock"},next:{title:"Entitlement List",permalink:"/idn/docs/saas-connectivity/commands/entitlement-list"}},s={},d=[{value:"Example StdAccountUpdateInput",id:"example-stdaccountupdateinput",level:3},{value:"Example StdAccountUpdateOutput",id:"example-stdaccountupdateoutput",level:3},{value:"Description",id:"description",level:2},{value:"Input Schema",id:"input-schema",level:2},{value:"Response Schema",id:"response-schema",level:2},{value:"Testing in IdentityNow",id:"testing-in-identitynow",level:2}],l={toc:d};function p(t){let{components:e,...n}=t;return(0,o.kt)("wrapper",(0,a.Z)({},l,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Input/Output"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Data Type"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"Input"),(0,o.kt)("td",{parentName:"tr",align:"center"},"StdAccountUpdateInput")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"Output"),(0,o.kt)("td",{parentName:"tr",align:"center"},"StdAccountUpdateOutput")))),(0,o.kt)("h3",{id:"example-stdaccountupdateinput"},"Example StdAccountUpdateInput"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n    "key": {\n        "simple": {\n            "id": "john.doe"\n        }\n    },\n    "changes": [\n        {\n            "op": <Set|Add|Remove>,\n            "attribute": <account attribute to modify>,\n            "value": <the value to use for the operation>\n        }\n    ]\n}\n')),(0,o.kt)("h3",{id:"example-stdaccountupdateoutput"},"Example StdAccountUpdateOutput"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n    "key": {\n        "simple": {\n            "id": "john.doe"\n        }\n    },\n    "disabled": false,\n    "locked": false,\n    "attributes": {\n        "id": "john.doe",\n        "displayName": "John Doe",\n        "email": "example@sailpoint.com",\n        "entitlements": [\n            "administrator",\n            "sailpoint"\n        ]\n    }\n}\n')),(0,o.kt)("h2",{id:"description"},"Description"),(0,o.kt)("p",null,"The account update command triggers whenever IDN is told to modify an identity's\nattributes or entitlements on the target source. For example, granting an\nidentity a new entitlement through a role, changing an identity\u2019s lifecycle\nstate, or modifying an identity attribute tied to an account attribute all\ntrigger the account update command."),(0,o.kt)("h2",{id:"input-schema"},"Input Schema"),(0,o.kt)("p",null,"The payload from IDN contains the ID of the identity to modify, the\nconfiguration items the connector needs to call the source API, and one or more\nchange operations to apply to the identity. Each operation has the following\nspecial considerations:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Set:")," Set tells the connector to overwrite the current value of the\nattribute or entitlement with the new value provided in the payload. The\nentire entitlement array resets if there are multi-valued entitlements.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Add:")," Add only works for multi-valued entitlements. Add tells the connector\nto add one or more values to the entitlement. Add is often useful for group\nentitlements when new groups are added to the identity. If only one\nentitlement is added, it is represented as a ",(0,o.kt)("inlineCode",{parentName:"p"},"string"),". If more than one\nentitlement is added, it represented as an ",(0,o.kt)("inlineCode",{parentName:"p"},"array of strings"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Remove:")," Remove is similar to add, but it also works for attributes or\nsingle-valued entitlements. If you apply remove to multi-valued entitlements,\ndoing so tells the connector to remove the value(s) from the entitlement. If\nonly one entitlement is removed, it is represented as a ",(0,o.kt)("inlineCode",{parentName:"p"},"string"),". If more than\none entitlement is removed, it is represented as an ",(0,o.kt)("inlineCode",{parentName:"p"},"array of strings"),". If you\napply remove to a single-valued entitlement or account attribute, doing so\ntells the connector to set the value to ",(0,o.kt)("inlineCode",{parentName:"p"},"null")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"empty"),"."))),(0,o.kt)("p",null,"The following example payload tells the connector to perform the following\nupdate actions:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Set the title of the account to \u201cDeveloper Advocate.\u201d")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Add the account to two groups on the source: \u201cEngineering\u201d and \u201cSupport.\u201d")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Remove the account from the \u201cModerator\u201d group."))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "std:account:update",\n  "input": {\n      "identity": "95",\n      "changes": [\n          {"op": "Set", "attribute": "title", "value": "Developer Advocate"},\n          {"op": "Add", "attribute": "groups", "value": ["Engineering", "Support"]},\n          {"op": "Remove", "attribute": "groups", "value": "Moderator"}\n      ]\n  }\n}\n')),(0,o.kt)("h2",{id:"response-schema"},"Response Schema"),(0,o.kt)("p",null,"After the connector applies the operations defined in the input payload, the\nconnector must respond to IDN with the changes to the account so IDN can update\nthe identity accordingly. If an account update operation results in no changes\nto the account, the connector responds with an empty object ",(0,o.kt)("inlineCode",{parentName:"p"},"{}"),". If the update\noperation results in one or more changes to the account, the connector responds\nwith the complete account as it exists in the source, just like an account read\nresponse. IDN can parse the response and apply the differences accordingly."),(0,o.kt)("h2",{id:"testing-in-identitynow"},"Testing in IdentityNow"),(0,o.kt)("p",null,"You can test the account update command the way you test the\n",(0,o.kt)("a",{parentName:"p",href:"/idn/docs/saas-connectivity/commands/account-create"},"Account Create")," command. Follow the steps in \u201cTesting in\nIdentityNow\u201d from \u201cAccount Create\u201d to set up an access profile and role. Be sure\nto run the aggregation so the account(s) are created in the target source. Once\nthe account(s) are created in the target source, modify the access profile to\ngrant an additional entitlement. Return to the role and click the \u2018Update\u2019\nbutton in the upper right corner. Doing so triggers the account update command\nbecause the accounts are already created in the target source. Once the update\nis complete, ensure the account(s) have the additional entitlement."),(0,o.kt)("p",null,"Note: Testing the account update command for removing entitlements using this\nmethod does not work. You can remove the entitlement from the access profile and\nrun an update, but IDN will not send an update command to the connector to\nremove the entitlement. We are looking for suggestions on how to test the\nremoval of entitlements."))}p.isMDXComponent=!0}}]);