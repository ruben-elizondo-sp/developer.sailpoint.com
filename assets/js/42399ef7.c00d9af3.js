"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([[20771],{75353:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var a=n(87462),r=(n(67294),n(3905));const i={id:"username-generator",title:"Username Generator",pagination_label:"Username Generator",sidebar_label:"Username Generator",sidebar_class_name:"usernameGenerator",keywords:["transforms","operations","username","generator"],description:"Derive a unique value for an attribute in an account create profile.",slug:"/docs/transforms/operations/username-generator",tags:["Transforms","Transform Operations"]},s=void 0,o={unversionedId:"docs/identity-now/transforms/operations/username-generator",id:"docs/identity-now/transforms/operations/username-generator",title:"Username Generator",description:"Derive a unique value for an attribute in an account create profile.",source:"@site/products/idn/docs/identity-now/transforms/operations/username-generator.md",sourceDirName:"docs/identity-now/transforms/operations",slug:"/docs/transforms/operations/username-generator",permalink:"/idn/docs/transforms/operations/username-generator",draft:!1,editUrl:"https://github.com/sailpoint-oss/developer-community-site/edit/main/products/idn/docs/identity-now/transforms/operations/username-generator.md",tags:[{label:"Transforms",permalink:"/idn/tags/transforms"},{label:"Transform Operations",permalink:"/idn/tags/transform-operations"}],version:"current",lastUpdatedBy:"GitHub Action Bot",lastUpdatedAt:1666883192,formattedLastUpdatedAt:"Oct 27, 2022",frontMatter:{id:"username-generator",title:"Username Generator",pagination_label:"Username Generator",sidebar_label:"Username Generator",sidebar_class_name:"usernameGenerator",keywords:["transforms","operations","username","generator"],description:"Derive a unique value for an attribute in an account create profile.",slug:"/docs/transforms/operations/username-generator",tags:["Transforms","Transform Operations"]},sidebar:"idnDocs",previous:{title:"Upper",permalink:"/idn/docs/transforms/operations/upper"},next:{title:"UUID Generator",permalink:"/idn/docs/transforms/operations/uuid-generator"}},u={},l=[{value:"Overview",id:"overview",level:2},{value:"Transform Structure",id:"transform-structure",level:2},{value:"Attributes",id:"attributes",level:2},{value:"Examples",id:"examples",level:2}],m={toc:l};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"Use the username generator transform to specify logic to use when it derives a\nunique value for an attribute in an account create profile. The generator's\nlogic can be as simple as a combination of parts of a user's name and/or HR data\n(e.g., firstName.lastName), but sometimes generator logic such as a uniqueness\ncounter can be necessary to find a unique value in the target system (e.g.,\nfirstName.lastName1 if firstName.lastName is already taken)."),(0,r.kt)("admonition",{title:"Other Considerations",type:"note"},(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},'The transform allows you to use "uniqueCounter" as a reserved variable for\nnumerically trying the next iteration of the pattern. Once the generator is\nactive on a pattern with the "uniqueCounter," it will keep incrementing until\nit either has found a unique username candidate, or it exhausts the\n"cloudMaxUniqueChecks" value. This means that the generator does not process\nany patterns after one containing "uniqueCounter." The "uniqueCounter" ',(0,r.kt)("strong",{parentName:"li"},"must\nalways be last")," in the pattern list."),(0,r.kt)("li",{parentName:"ul"},'Within the account attribute definition structure, there is a field for\n"cloudMaxUniqueChecks" that identifies how many times the generator must\ninvoke the uniqueness check logic before it stops executing. The maximum\nallowed value for this field is 50.'))),(0,r.kt)("h2",{id:"transform-structure"},"Transform Structure"),(0,r.kt)("p",null,"The username generator transform is intended for use as a configuration within\nthe account create profile for a source. Thus, this transform's structure is\nmore extensive than a typical Seaspray implementation -- it must be assigned to\na create profile attribute (designated by ",(0,r.kt)("inlineCode",{parentName:"p"},"name"),") and provide certain uniqueness\ncheck attributes such as ",(0,r.kt)("inlineCode",{parentName:"p"},"cloudMaxSize"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"cloudMaxUniqueChecks"),", and\n",(0,r.kt)("inlineCode",{parentName:"p"},"cloudRequired"),"."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"cloudMaxSize")," attribute denotes the maximum length of generated data\nallowable as a result of the generator logic. The transform truncates any\ncharacters over the ",(0,r.kt)("inlineCode",{parentName:"p"},"cloudMaxSize"),". The ",(0,r.kt)("inlineCode",{parentName:"p"},"cloudMaxUniqueChecks")," attribute\ndetermines the maximum number of iterations the generator must attempt before\nfailing to generate a value. The ",(0,r.kt)("inlineCode",{parentName:"p"},"cloudRequired")," attribute is an internal flag\nrequired for the IdentityNow platform - leave it as ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,r.kt)("p",null,"Provide the username generator transform itself in the create profile attribute\nentry's ",(0,r.kt)("inlineCode",{parentName:"p"},"transform")," parameter."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "attributes": {\n    "cloudMaxSize": "100",\n    "cloudMaxUniqueChecks": "5",\n    "cloudRequired": "true"\n  },\n  "isRequired": false,\n  "multi": false,\n  "name": "distinguishedName",\n  "transform": {\n    "type": "usernameGenerator",\n    "attributes": {\n      "sourceCheck": true,\n      "patterns": [\n        "CN=$fi.$ln,OU=Users,DC=YourDomain,DC=com",\n        "CN=$fn.$ln,OU=Users,DC=YourDomain,DC=com",\n        "CN=$fn.$mi.$ln${uniqueCounter},OU=Users,DC=YourDomain,DC=com"\n      ],\n      "fn": {\n        "type": "identityAttribute",\n        "attributes": {\n          "name": "firstname"\n        }\n      },\n      "ln": {\n        "type": "identityAttribute",\n        "attributes": {\n          "name": "lastname"\n        }\n      },\n      "fi": {\n        "type": "substring",\n        "attributes": {\n          "input": {\n            "type": "identityAttribute",\n            "attributes": {\n              "name": "firstname"\n            }\n          },\n          "begin": 0,\n          "end": 1\n        }\n      },\n      "mi": {\n        "type": "substring",\n        "attributes": {\n          "input": {\n            "type": "identityAttribute",\n            "attributes": {\n              "name": "middlename"\n            }\n          },\n          "begin": 0,\n          "end": 1\n        }\n      }\n    }\n  },\n  "type": ""\n}\n')),(0,r.kt)("h2",{id:"attributes"},"Attributes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Required Attributes")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"type")," - This must always be set to ",(0,r.kt)("inlineCode",{parentName:"li"},"usernameGenerator"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"patterns")," - This is a JSON array of patterns for the generator to\nevaluate for uniqueness, in sequential order.",(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Note")," that you can leverage ",(0,r.kt)("inlineCode",{parentName:"p"},"$uniqueCounter")," here to automatically\nincrement a counter if the generated value is not available and you want\nto try appending numeric values (i.e., 1, 2, 3, etc.) instead of\nprogressing beyond the current pattern."))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Optional Attributes")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"sourceCheck")," - This boolean value (true/false) indicates whether the\ngenerator must check only the IdentityNow database's representation of\naccounts for uniqueness, or whether it must query the target system\ndirectly. If no value is provided, the attribute defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"false"),".",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"true")," indicates the generator must check the target system directly. The\ngenerator only respects this setting if the system supports the\n",(0,r.kt)("inlineCode",{parentName:"li"},"getObject")," functionality. For systems that lack the ability to query for\nsingle account objects, the generator ignores this setting and defaults to\n",(0,r.kt)("inlineCode",{parentName:"li"},"false"),". The generator only checks the attribute identified in the account\nschema as the ",(0,r.kt)("inlineCode",{parentName:"li"},"accountID"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"false")," indicates the generator must check only the IdentityNow database\nof accounts. The generator only checks the ",(0,r.kt)("inlineCode",{parentName:"li"},"accountID"),".")))))),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("p",null,"This generator takes the user's first initial, appends the user's full last\nname, and then leverages a uniqueness counter to generate a unique value for\nuserId. For example, if the user's name were John Doe, the username generator\nwould first try ",(0,r.kt)("inlineCode",{parentName:"p"},"jdoe.")," If that were not unique, it would progress to ",(0,r.kt)("inlineCode",{parentName:"p"},"jdoe1"),",\nthen ",(0,r.kt)("inlineCode",{parentName:"p"},"jdoe2"),", until ",(0,r.kt)("inlineCode",{parentName:"p"},"jdoe25"),"."),(0,r.kt)("p",null,"If the generator does not find a unique value within the first 25 tries, it\nreturns an IllegalStateException."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Transform Request Body"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "attributes": {\n    "cloudMaxSize": "100",\n    "cloudMaxUniqueChecks": "25",\n    "cloudRequired": "true"\n  },\n  "isRequired": false,\n  "multi": false,\n  "name": "userId",\n  "transform": {\n    "type": "usernameGenerator",\n    "attributes": {\n      "sourceCheck": true,\n      "patterns": ["$fi$ln${uniqueCounter}"],\n      "ln": {\n        "type": "identityAttribute",\n        "attributes": {\n          "name": "lastname"\n        }\n      },\n      "fi": {\n        "type": "substring",\n        "attributes": {\n          "input": {\n            "type": "identityAttribute",\n            "attributes": {\n              "name": "firstname"\n            }\n          },\n          "begin": 0,\n          "end": 1\n        }\n      }\n    }\n  },\n  "type": ""\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("p",null,"\xa0"),(0,r.kt)("p",null,'This generator takes the user\'s first name, appends a period and then the user\'s\nfull last name, and then adds a uniqueness counter to generate a unique value\nfor accountId. For example, if the user\'s name were Adam Smith, the username\ngenerator would first try "adam.smith". If that were not unique, it would\nprogress to "adam.smith1", then "adam.smith2", until "adam.smith10".'),(0,r.kt)("p",null,"If the generator does not find a unique value within the first 10 tries, it\nreturns an IllegalStateException."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Transform Request Body"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "attributes": {\n    "cloudMaxSize": "100",\n    "cloudMaxUniqueChecks": "10",\n    "cloudRequired": "true"\n  },\n  "isRequired": false,\n  "multi": false,\n  "name": "accountId",\n  "transform": {\n    "type": "usernameGenerator",\n    "attributes": {\n      "sourceCheck": true,\n      "patterns": ["$fn.$ln${uniqueCounter}"],\n      "fn": {\n        "type": "identityAttribute",\n        "attributes": {\n          "name": "firstname"\n        }\n      },\n      "ln": {\n        "type": "identityAttribute",\n        "attributes": {\n          "name": "lastname"\n        }\n      }\n    }\n  },\n  "type": ""\n}\n')))}d.isMDXComponent=!0}}]);